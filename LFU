#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

int main() {
    int n, frames;
    cout << "Enter number of pages: ";
    cin >> n;

    vector<int> pages(n);
    cout << "Enter page reference string:\n";
    for (int i = 0; i < n; i++)
        cin >> pages[i];

    cout << "Enter number of frames: ";
    cin >> frames;

    vector<int> memory;
    unordered_map<int, int> freq;
    int pageFaults = 0;

    for (int i = 0; i < n; i++) {
        int page = pages[i];
        bool found = false;

        for (int p : memory)
            if (p == page)
                found = true;

        if (!found) {
            pageFaults++;

            if (memory.size() < frames) {
                memory.push_back(page);
            } else {
                // Find LFU page
                int lfuIndex = 0;
                for (int j = 1; j < memory.size(); j++) {
                    if (freq[memory[j]] < freq[memory[lfuIndex]])
                        lfuIndex = j;
                }
                freq.erase(memory[lfuIndex]);
                memory[lfuIndex] = page;
            }
        }

        freq[page]++; // Increase usage count
    }

    cout << "Total Page Faults = " << pageFaults << "\n";
    return 0;
}
Enter number of pages: 10
Enter page reference string:
1 2 3 2 4 1 5 2 4 3
Enter number of frames: 3

Total Page Faults = 8
