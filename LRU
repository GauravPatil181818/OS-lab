#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int main() {
    int n, frames;
    cout << "Enter number of pages: ";
    cin >> n;

    int pages[n];
    cout << "Enter page reference string:\n";
    for (int i = 0; i < n; i++)
        cin >> pages[i];

    cout << "Enter number of frames: ";
    cin >> frames;

    vector<int> memory;
    unordered_map<int, int> lastUsed; // page -> time
    int pageFaults = 0;

    for (int i = 0; i < n; i++) {
        int page = pages[i];

        // Check if page is already in memory
        bool found = false;
        for (int p : memory)
            if (p == page)
                found = true;

        if (!found) {
            pageFaults++;
            if (memory.size() < frames) {
                memory.push_back(page);
            } else {
                // Find least recently used page
                int lruIndex = 0;
                for (int j = 1; j < memory.size(); j++) {
                    if (lastUsed[memory[j]] < lastUsed[memory[lruIndex]])
                        lruIndex = j;
                }
                memory[lruIndex] = page;
            }
        }
        lastUsed[page] = i; // update last used time
    }

    cout << "Total Page Faults = " << pageFaults << "\n";
    return 0;
}
OUtput:
Enter number of pages: 12
Enter page reference string:
1 3 0 3 5 6 3 0 1 4 5 3
Enter number of frames: 3

Total Page Faults = 10
